<schema xmlns="https://raw.githubusercontent.com/zopefoundation/ZConfig/master/doc/schema.dtd"
        prefix="dhcpkit.ipv6.server"
        datatype=".config_elements.MainConfig">

    <description>
        Configuration file schema for the DHCPKit IPv6 DHCP Server
    </description>


    <!-- Listeners: the things that receive DHCPv6 messages -->
    <abstracttype name="listener_factory">
        <description>
            Interface that must be implemented by configuration sections that are factories for for network listeners
        </description>
    </abstracttype>

    <sectiontype name="listener_base">
        <description>
            Base class for listeners. This section type cannot be used directly because it doesn't implement the
            listener interface itself.

            If configured incoming messages received by this listener will be tagged with the mark string, which can
            later be used in filtering.
        </description>

        <multikey name="mark" attribute="marks">
            <default>unmarked</default>
        </multikey>
    </sectiontype>


    <!-- DUIDs -->
    <abstracttype name="duid">
        <description>
            Interface that must be implemented by configuration sections for DUIDs
        </description>
    </abstracttype>


    <!-- Handlers: the things that take action on an incoming message and possibly update the response -->
    <abstracttype name="handler_factory">
        <description>
            Interface that must be implemented by configuration sections that are factories for handlers that take
            action on incoming messages, possibly updating the response.
        </description>
    </abstracttype>

    <sectiontype name="ignore-request"
                 implements="handler_factory"
                 datatype=".config_handlers.IgnoreRequestHandlerFactory">
    </sectiontype>


    <!-- Filters: the mechanism to decide which handlers apply to which incoming messages -->
    <abstracttype name="filter_factory">
        <description>
            Interface that must be implemented by configuration sections that are factories for filters for incoming
            messages.
        </description>
    </abstracttype>

    <sectiontype name="filter_factory_base">
        <description>
            Base class for filters. This section type cannot be used directly because it doesn't implement the
            filter interface itself.

            Handlers configured under a listener are only executed if the filter matches. Multiple filters can be
            applied to a single message by nesting the filters.
        </description>

        <!-- Filters and handlers are configured at the top level and recursively in sub-filters -->
        <multisection type="filter_factory" name="*" attribute="filter_factories"/>
        <multisection type="handler_factory" name="*" attribute="handler_factories"/>
    </sectiontype>

    <sectiontype name="marked-with"
                 extends="filter_factory_base"
                 implements="filter_factory"
                 datatype=".config_filters.MarkedWithFilterFactory">
        <description>
            Filter incoming messages based on the mark set by i.e. the listener.
        </description>
    </sectiontype>


    <!-- Basic server settings -->
    <key name="user" datatype=".config_datatypes.user_name" default="nobody"/>
    <key name="group" datatype=".config_datatypes.group_name"/>
    <key name="workers" datatype=".config_datatypes.number_of_workers"/>
    <key name="allow-rapid-commit" datatype="boolean" default="False"/>
    <key name="rapid-commit-rejections" datatype="boolean" default="False"/>
    <section type="duid" name="server-id"/>

    <!-- Dealing with excessive exceptions -->
    <key name="exception-window" datatype="float" default="1.0"/>
    <key name="max-exceptions" datatype="integer" default="10"/>

    <!-- Logging -->
    <import package="dhcpkit.common.server.logging"/>
    <section type="logging" name="*" attribute="logging"/>

    <!-- Listeners are configured at the top level -->
    <multisection type="listener_factory" name="*" attribute="listener_factories"/>

    <!-- Filters and handlers are configured at the top level and recursively in sub-filters -->
    <multisection type="filter_factory" name="*" attribute="filter_factories"/>
    <multisection type="handler_factory" name="*" attribute="handler_factories"/>
</schema>
